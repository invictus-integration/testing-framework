name: $(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - src/*

pr:
  paths:
    include:
    - src/*
    - build/ci-build.yml

resources:
  repositories:
    - repository: templates
      type: github
      name: arcus-azure/azure-devops-templates
      endpoint: invictus-integration

variables:
  - group: 'Build Configuration'
  - group: 'Invictus Testing - Integration Testing'
  - template: ./variables/build.yml
    # 'Package.Version.ManualTrigger' is added as queue-time variable on build in Azure DevOps
  - name: Solution
    value: '**/Invictus.TestLibrary.LogicApps.sln'

stages:
  - stage: Build
    jobs:
      - job: Compile
        pool:
          # We'll use it once the project is migrated to .NET Core
          #vmImage: 'ubuntu-16.04'
          vmImage: 'windows-latest'
        steps:
          - template: 'nuget/determine-pr-version.yml@templates'
            parameters:
              manualTriggerVersion: $(Package.Version.ManualTrigger)
          # We'll use it once the project is migrated to .NET Core:
          #- template: 'build/build-solution.yml@templates'
          #  parameters:
          #    dotnetSdkVersion: '$(DotNet.Sdk.Version)'
          #    versionSuffix: '$(packageVersion)'
          # instead of: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>
          - task: NuGetToolInstaller@1
          - task: NuGetCommand@2
            displayName: 'Nuget restore'
            inputs:
              restoreSolution: '$(Solution)'
          - task: VSBuild@1
            inputs:
              solution: '$(Solution)'
              platform: '$(Build.Platform)'
              configuration: '$(Build.Configuration)'
          # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
          - task: CopyFiles@2
            displayName: 'Copy build artifacts'
            inputs:
              contents: '**/?(bin|obj)/**'
              targetFolder: '$(Pipeline.Workspace)/build'
          - task: PublishPipelineArtifact@0
            displayName: 'Publish build artifacts'
            inputs:
              targetPath: '$(Pipeline.Workspace)/build'
              artifactName: Build

# We'll use it once the project is migrated to .NET Core
#  - stage: UnitTests	
#    displayName: Unit Tests	
#    dependsOn: Build	
#    condition: succeeded()	
#    jobs:	
#      - job: UnitTests	
#        displayName: 'Run unit tests'	
#        pool:	
#          vmImage: 'ubuntu-16.04'	
#        steps:	
#          - task: DownloadPipelineArtifact@2	
#            displayName: 'Download build artifacts'	
#            inputs:	
#              artifact: 'Build'	
#              path: '$(Build.SourcesDirectory)'	
#          - template: test/run-unit-tests.yml@templates	
#            parameters:	
#              dotnetSdkVersion: '$(DotNet.Sdk.Version)'	
#              projectName: '$(Project).Tests.Unit'

  - stage: IntegrationTests
    displayName: Integration Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: IntegrationTests
        displayName: 'Run integration tests'
        pool:
          # We'll use it once the project is migrated to .NET Core
          #vmImage: 'ubuntu-16.04'
          vmImage: 'windows-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          # We'll use it once the project is migrated to .NET Core
          #- template: test/run-integration-tests.yml@templates
          #  parameters:
          #    dotnetSdkVersion: '$(DotNet.Sdk.Version)'
          #    projectName: '$(Project).UnitTests'
          #    category: 'Integration'
          # instead of: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>
          - task: a8515ec8-7254-4ffd-912c-86772e2b5962@3
            displayName: 'Replace tokens'
            inputs:
              rootDirectory: 'src/Invictus.TestLibrary.LogicApps/Invictus.TestLibrary.LogicApps.UnitTests'
              targetFiles: '**/*.UnitTests.dll.config'
              encoding: 'auto'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              tokenPrefix: '#{'
              tokenSuffix: '}#'
          - task: VSTest@2
            inputs:
              platform: '$(Build.Platform)'
              configuration: '$(Build.Configuration)'
          # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

  - stage: ReleaseToMyget
    displayName: 'Release to MyGet'
    dependsOn: IntegrationTests
    condition: succeeded()
    jobs:
      - job: PushToMyGet
        displayName: 'Push to MyGet'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - template: nuget/publish-preview-package.yml@templates
